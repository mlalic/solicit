initSidebarItems({"constant":[["FRAME_HEADER_LEN",""]],"fn":[["pack_header","Constructs a buffer of 9 bytes that represents the given `FrameHeader`."],["unpack_header","Deconstructs a `FrameHeader` into its corresponding 4 components, represented as a 4-tuple: `(length, frame_type, flags, stream_id)`."]],"mod":[["builder","Defines the `FrameBuilder` trait and some default implementations of the trait."],["data","The module contains the implementation of the `DATA` frame and associated flags."],["goaway","Implements the `GOAWAY` HTTP/2 frame."],["headers","The module contains the implementation of the `HEADERS` frame and associated flags."],["ping","Implements the `PING` HTTP/2 frame."],["rst_stream","The module contains the implementation of the `RST_STREAM` frame."],["settings","The module contains the implementation of the `SETTINGS` frame and associated flags."],["window_update","Implements the `WINDOW_UPDATE` HTTP/2 frame."]],"struct":[["NoFlag","A helper struct that can be used by all frames that do not define any flags."],["RawFrame","A struct that defines the format of the raw HTTP/2 frame, i.e. the frame as it is read from the wire."]],"trait":[["Flag","A trait that all HTTP/2 frame header flags need to implement."],["Frame","A trait that all HTTP/2 frame structs need to implement."],["FrameIR","A trait that types that are an intermediate representation of HTTP/2 frames should implement. It allows us to generically serialize any intermediate representation into an on-the-wire representation."]],"type":[["FrameHeader","An alias for the 4-tuple representing the components of each HTTP/2 frame header."],["FrameHeaderBuffer","An alias for the 9-byte buffer that each HTTP/2 frame header must be stored in."]]});